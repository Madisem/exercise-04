---
title: "Wordle"
author: "Madina"
format: html
editor: visual
---

I will try to make wordle game! WOW excited! Can't wait when it will be done! \## Running Code

```{r, include=FALSE}
library(tidyverse)
library(dplyr)

load_dictionary<-function(filename)
{
  x<-read_csv(filename)
  return (x)
}
pick_solution<-function(table, n){ 
  filtered_df <- subset(table, nchar(words) == n)
  w<-sample(filtered_df[[1]], size = 1, replace = FALSE)
  word_array<-unlist(strsplit(w, split = ""))
  return(word_array)
}

```

Checking for the valid entry of the input and evalutating the word!
```{r, include=FALSE}

check_guess<-function(guess,solution,valid_list){
guess_word <- paste(guess, collapse = "")
if (is.null(guess))  {
  print("Empty word! Enter the word!")
  Flag="No"
  } else if (length(guess) != length(solution)) {
    print("Enter only the same length words as hidden behind")
    Flag="No"
  }
  else if (!(guess_word %in% valid_list[[1]])){
    print("Enter the valid words only!")
    Flag="No"
  }
  else { Flag="Yes"}
return(Flag)
}
  
evalutate_guess<-function(guess, solution){
  for (i in 1:length(guess)){
    for (j in 1:length(solution)){
       if (i==j & guess[i] == solution[j]){
        print(paste("You letter",guess[i],"is in the right position in the word"))
           }
      else if (guess[i] == solution[j]){
        print(paste("You letter",guess[i],"is in the word but not in the right position"))
         }
      else { next}
    }
  }
  if (length(setdiff(guess, solution)) == 0){
    output = 1
  }
  else {output = 0}
  return(output)
} 

#### main funciton to play the game
play_wordle <- function(solution, valid_list, num_guesses=6){
  i=0
  result = 0
  found<-character(0)
  not_found_letters<-LETTERS
  while (i<7 | result == 0) {
    Flag="No"
    while (Flag == "No") {
      enter <- toupper(readline("Type your word, then press <enter>: "))
      guess<-unlist(strsplit(enter, split = ""))
      Flag=check_guess(guess,solution,valid_list)
      }
    result<-evalutate_guess(guess,solution)
    if (result == 1){
      print("Congratulations you have guessed the word correctly!")
    }
    else{
    ### to highlight found letters; all together
    found_letter<-intersect(guess, solution)
    if (length(found_letter) > 0){
    found<-union(found, found_letter)
    print("Letters you have found already: ")
    print(found)
    }
    ### to highlight not found but tried letters; all together
    not_found<-setdiff(not_found_letters, guess)
    not_found_letters<-unique(c(not_found, found_letter))
    print("Letters to consider: ")
    print(not_found_letters) 
    }
    i=i+1
  }
  if (result == 0 ) {
  print("Unforturnately, You run out of the chances and you lost the game! Try again!")}
  }
```

```{r, include=FALSE}

run_this<-function(valid_list,solution_list){

print("Welcome to the Wordle game by Madina")
print("You have 6 chances to predict the hidden word")

n <- as.integer(readline("Please choose the length of the word you want to play, then press <enter>: "))
a<-pick_solution(solution_list,n)
print("Your letters:")
print(LETTERS)
play_wordle(a,valid_list)
}
```
Start of the Game! Just run those lines of code!

```{r, include=FALSE}
### to start run the following line of the codes;
###before these lines are funcitons;
valid_list <- load_dictionary("collins-scrabble-words-2019.txt")
solution_list <- load_dictionary("google-10000-english-usa-no-swears.txt")
solution_list<-intersect(solution_list, valid_list)

run_this(valid_list,solution_list)



### Wanted to do in boxes and good representation, but couldnt;

df <- data.frame(
  x = 1:n,
  y = 1,
  letters = rep("",n)
)

# Plot boxes with letters
ggplot(df, aes(x = x, y = y, label = letters)) +
  geom_tile(fill = "white", color = "black", size = 2) +  # Boxes
  geom_text(size = 8) +  # Letters
  theme_void() +  # Remove background
  coord_fixed()
```

The `echo: false` option disables the printing of code (only output is displayed).
